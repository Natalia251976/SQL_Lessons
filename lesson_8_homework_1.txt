--task1  (lesson8)
-- oracle: https://leetcode.com/problems/department-top-three-salaries/

select d.Name as Department, e1.Name as Employee, e1.Salary
from Employee e1
join Department d on e1.DepartmentId = d.Id
where (select count(distinct e2.Salary)
from Employee e2
where e2.Salary > e1.Salary
and e1.DepartmentId = e2.DepartmentId) <3 

--task2  (lesson8)
-- https://sql-academy.org/ru/trainer/tasks/17

SELECT member_name, status, SUM(amount*unit_price) AS costs 
FROM FamilyMembers
JOIN Payments on FamilyMembers.member_id=Payments.family_member
WHERE YEAR(date) = 2005
GROUP BY member_name, status


--task3  (lesson8)
-- https://sql-academy.org/ru/trainer/tasks/13

SELECT name 
FROM Passenger
GROUP BY name
HAVING COUNT(name) > 1

--task4  (lesson8)
-- https://sql-academy.org/ru/trainer/tasks/38

SELECT COUNT(first_name) AS count
FROM Student
WHERE first_name='Anna'

--task5  (lesson8)
-- https://sql-academy.org/ru/trainer/tasks/35
SELECT COUNT(classroom) AS count
FROM Schedule
WHERE date='2019-09-02'

--task6  (lesson8)
-- https://sql-academy.org/ru/trainer/tasks/38

SELECT COUNT(first_name) AS count
FROM Student
WHERE first_name='Anna'
--task7  (lesson8)
-- https://sql-academy.org/ru/trainer/tasks/32

SELECT FLOOR (AVG (TIMESTAMPDIFF(YEAR, birthday, CURDATE()))) as age
from FamilyMembers

--task8  (lesson8)
-- https://sql-academy.org/ru/trainer/tasks/27


SELECT gt.good_type_name,sum(p.unit_price*p.amount) as costs 
from Payments p join Goods g ON p.good=g.good_id
join GoodTypes gt on gt.good_type_id=g.type
where YEAR(p.date)='2005' GROUP BY gt.good_type_name

--task9  (lesson8)
-- https://sql-academy.org/ru/trainer/tasks/37

SELECT MIN(TIMESTAMPDIFF(YEAR,birthday,CURRENT_DATE)) AS year
FROM Student

--task10  (lesson8)
-- https://sql-academy.org/ru/trainer/tasks/44

SELECT MAX(TIMESTAMPDIFF(YEAR,s.birthday,CURRENT_DATE)) AS max_year
FROM Student s JOIN Student_in_class s_i on s.id=s_i.student
JOIN Class c on c.id=s_i.class
where c.name LIKE ('10%')

--task11 (lesson8)
-- https://sql-academy.org/ru/trainer/tasks/20

SELECT status , member_name , sum(p.unit_price*p.amount) as costs
from FamilyMembers f_m
join Payments p on f_m.member_id=p.family_member
join Goods g on p.good=g.good_id
JOIN GoodTypes g_t on g_t.good_type_id=g.type
WHERE g_t.good_type_name='entertainment' GROUP BY status


--task12  (lesson8)
-- https://sql-academy.org/ru/trainer/tasks/55
DELETE FROM Company
WHERE Company.id IN (
    SELECT company FROM Trip
    GROUP BY company
    HAVING COUNT(id) = (SELECT MIN(count) FROM (SELECT COUNT(id) AS count FROM Trip GROUP BY company) AS min_count)
    )

--task13  (lesson8)
-- https://sql-academy.org/ru/trainer/tasks/45


SELECT classroom FROM Schedule
GROUP BY classroom
HAVING COUNT(classroom) = 
    (SELECT COUNT(classroom) 
     FROM Schedule 
     GROUP BY classroom
     ORDER BY COUNT(classroom) DESC 
     LIMIT 1)
	 
--task14  (lesson8)
-- https://sql-academy.org/ru/trainer/tasks/43

select t.last_name 
from Teacher t 
join Schedule s on t.id=s.teacher
join Subject su on su.id=s.subject
WHERE su.name='Physical Culture'
ORDER BY t.last_name 

--task15  (lesson8)
-- https://sql-academy.org/ru/trainer/tasks/63

SELECT CONCAT(last_name, '.', LEFT(first_name, 1), '.', LEFT(middle_name, 1), '.') AS name
FROM Student
ORDER BY last_name, first_name,middle_name
